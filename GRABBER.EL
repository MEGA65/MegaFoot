.DOCS' «RABBER ‘OOL - PORTED TO ≈LEVEN (FOR EASIER MAINTENANCE)' ------------'' ’SAGE:' -----' - –RESS 'SPACE' KEY ON TOP-LEFT POINT' - ‘HEN USE CURSOR KEYS TO MOVE TO BOTTOM-RIGHT POINT & PRESS 'SPACE'' - –RESS '-' AND '+' KEYS TO MOVE BETWEEN PREVIOUS AND NEXT FRAMES' - –RESS 'C' TO REDRAW CURRENT FRAME' - –RESS 'D' TO DELETE THE CURRENT FRAME' - –RESS 'L' THEN A FRAME# TO LOAD THAT FRAME' - –RESS 'X' TO EXIT PROGRAM' - ∆1 = LOAD CHAR+COLOR .BIN FILE' - ∆3 = SAVE CHAR+COLOR .BIN FILE' - ∆5 = SAVE OPTIMIZED+REPAIRED .BIN FILE' - ∆7 = EDIT HIT BOXES#OUTPUT "GRABBER"' √HAR+√OLOR ∆ILE ∆ORMAT (∆1/∆3 KEYS)' ----------------------' ◊œ“ƒ: PROG-ADDRESS (IGNORED)' ◊œ“ƒ: SIZE OF DATA (INCLUDING THIS ◊œ“ƒ AND ONWARDS)' ¬Ÿ‘≈: # OF FRAMES' ' ∆“¡Õ≈ #0' --------'   ¬Ÿ‘≈: X'   ¬Ÿ‘≈: Y'   ¬Ÿ‘≈: W'   ¬Ÿ‘≈: H'   ƒ◊œ“ƒ: HEAD BOX (X1,Y1,X2,Y2)'   ƒ◊œ“ƒ: TORSO BOX (X1,Y1,X2,Y2)'   ƒ◊œ“ƒ: FEET BOX (X1,Y1,X2,Y2)'   ƒ◊œ“ƒ: ATTACK BOX (X1,Y1,X2,Y2)'   ¬Ÿ‘≈[X*Y]: CHAR DATA'   ¬Ÿ‘≈[X*Y]: COLOR DATA'' ∆“¡Õ≈ #1' --------'   (AS BEFORE...)'' ∆“¡Õ≈ #N' --------'   (AS BEFORE...)#DEFINE œ∆∆”≈‘Øƒ¡‘¡Ø”…⁄≈ = 2#DEFINE œ∆∆”≈‘ØŒ’ÕØ∆“¡Õ≈ = 3#DEFINE œ∆∆”≈‘Øÿ         = 4#DEFINE œ∆∆”≈‘ØŸ         = 5#DEFINE œ∆∆”≈‘Ø◊         = 6#DEFINE œ∆∆”≈‘Ø»         = 7#DEFINE œ∆∆”≈‘Ø»…‘¬œÿ≈”  = 8#DEFINE œ∆∆”≈‘Ø»¬Ø»≈¡ƒ   = 8#DEFINE œ∆∆”≈‘Ø»¬Ø‘œ“”œ  = 12#DEFINE œ∆∆”≈‘Ø»¬Ø∆≈≈‘   = 16#DEFINE œ∆∆”≈‘Ø»¬Ø¡‘‘¡√À = 20#DEFINE œ∆∆”≈‘Øƒ¡‘¡      = 24' √OLOR-ONLY ∆ILE ∆ORMAT (∆5 KEY)' ----------------------' ◊œ“ƒ: PROG-ADDRESS (IGNORED)' ◊œ“ƒ: SIZE OF DATA (INCLUDING THIS ◊œ“ƒ AND ONWARDS)' ¬Ÿ‘≈: # OF FRAMES' ' ∆“¡Õ≈ #0' --------'   ¬Ÿ‘≈: X'   ¬Ÿ‘≈: Y'   ¬Ÿ‘≈: W'   ¬Ÿ‘≈: H'   ƒ◊œ“ƒ: HEAD BOX (X1,Y1,X2,Y2)'   ƒ◊œ“ƒ: TORSO BOX (X1,Y1,X2,Y2)'   ƒ◊œ“ƒ: FEET BOX (X1,Y1,X2,Y2)'   ƒ◊œ“ƒ: ATTACK BOX (X1,Y1,X2,Y2)'   ¬Ÿ‘≈[X*Y]: COLOR DATA'' ∆“¡Õ≈ #1' --------'   (AS BEFORE...)'' ∆“¡Õ≈ #N' --------'   (AS BEFORE...)'--------.DECLARES'--------#DECLARE CLRØLINEØRIGHT$ = CHR$(27)+"Q"   ' OLD CL$#DECLARE CURRENTØFRAME  ' OLD FF#DECLARE X, Y  ' CURSOR POSITION#DECLARE PTR  ' POINTER TO DATA BYTES IN MEMORY#DECLARE FRAMEØCOUNT#DECLARE FRMIDX#DECLARE BYTESØUSED  ' OLD L#DECLARE FRMW, FRMH#DECLARE STARTØCHAR, STARTØCOLOR, ENDØCHAR, ENDØCOLOR#DECLARE STARTX, STARTY, ENDX, ENDY#DECLARE CURRØFRAME#DECLARE CLRØPTR#DECLARE A$, XIDX, YIDX#DECLARE DESTØCHARØPTR, DESTØCLRØPTR#DECLARE FNAME$#DECLARE CVAL#DECLARE STARTØPTR, ENDØPTR, CURRØPTR#DECLARE B(50,3)  ' HITBOXES#DEFINE ”‘œ“≈Ø”‘¡“‘Ø–œ” = 0#DEFINE ”‘œ“≈Ø≈ŒƒØ–œ” = 1#DECLARE STOREØSTATE  ' ARE WE STORING START/END POS CHAR/COLOUR DETAILS#DEFINE À≈ŸØ’– = "ë"#DEFINE À≈ŸØƒœ◊Œ = ""#DEFINE À≈ŸØÃ≈∆‘ = "ù"#DEFINE À≈ŸØ“…«»‘ = ""#DEFINE À≈ŸØ∆1 = "Ö"#DEFINE À≈ŸØ∆3 = "Ü"#DEFINE À≈ŸØ∆4 = "ä"#DEFINE À≈ŸØ∆5 = "á"#DEFINE À≈ŸØ∆7 = "à"#DEFINE À≈ŸØ∆8 = "å"'----.MAIN'----  KEY OFF  POKE $D020, 11, 14  GOSUB INITØVARS  GOSUB CHECKØMAGICØSIGNATURE  GOSUB LOCATEØNEXTØFREEØBYTE  GOSUB DRAWØFOOTER  DO WHILE 1    GOSUB STOREØSTATEØINFO    GOSUB DRAWØCURSOR    GOSUB GETØUSERØINPUT    GOSUB SHOWØCOORDS  LOOP'-----------.SHOWØCOORDS'-----------  CURSOR 0, 49  PRINT CLRØLINEØRIGHT$;  IF STOREØSTATE = ”‘œ“≈Ø”‘¡“‘Ø–œ” THEN BEGIN    PRINT CHR$(27)+"QX=";X;", Y=";Y;  BEND  IF STOREØSTATE = ”‘œ“≈Ø≈ŒƒØ–œ” THEN BEGIN    PRINT CHR$(27)+"QX=";STARTX;", Y=";STARTY;    PRINT ", W=";X-STARTX+1;", H=";Y-STARTY+1;  BEND  PRINT CLRØLINEØRIGHT$;  RETURN'--------------.GETØUSERØINPUT'--------------  GETKEY A$  IF A$ <> " " THEN GOSUB RESTOREØCHARØUNDERØCURSOR  IF A$ = À≈ŸØÃ≈∆‘ AND X > 0 THEN X = X - 1  IF A$ = À≈ŸØ“…«»‘ AND X < 79 THEN X = X + 1  IF A$ = À≈ŸØ’– AND Y > 0 THEN Y = Y - 1  IF A$ = À≈ŸØƒœ◊Œ AND Y < 49 THEN Y = Y + 1  IF A$ = "D" THEN GOSUB DELETEØFRAME  IF A$ = "C" THEN BEGIN    PRINT "ì";    CURRØFRAME = 0    GOSUB DRAWØCURRØFRAME  BEND  IF A$="-" AND CURRØFRAME > 0 THEN BEGIN    CURRØFRAME = CURRØFRAME - 1    GOSUB DRAWØCURRØFRAME  BEND  IF A$="=" AND CURRØFRAME < PEEK($42000)-1 THEN BEGIN    CURRØFRAME = CURRØFRAME + 1    GOSUB DRAWØCURRØFRAME  BEND  IF A$=" " THEN BEGIN    STOREØSTATE = STOREØSTATE + 1    IF STOREØSTATE = 2 THEN BEGIN      GOSUB SAVEØFRAMEØTOØMEMORY      END    BEND  BEND  IF A$="L" THEN GOSUB LOADØFRAME  IF A$="X" THEN BEGIN    CURSOR 0,0    KEY ON    END  BEND  IF A$ = À≈ŸØ∆1 THEN GOSUB LOADØBIN  IF A$ = À≈ŸØ∆3 THEN GOSUB SAVEØBIN  IF A$ = À≈ŸØ∆5 THEN GOSUB SAVEØOPTIMISED  IF A$ = À≈ŸØ∆7 THEN GOSUB EDITØHITØBOXES  RETURN'--------------.EDITØHITØBOXES'--------------  GOSUB SHOWØHITBOXØTABLE  ' GOSUB DRAWØHITBOXES  ' GOSUB »¬ØGETØUSERØINPUT  RETURN'-----------------.SHOWØHITBOXØTABLE'-----------------  GOSUB GETØCURRØFRAMEØPTR  CURRØPTR = PTR  CURRØPTR = CURRØPTR + œ∆∆”≈‘Ø»…‘¬œÿ≈”  CURSOR 50,40:PRINT "  HEAD: ";  CURSOR 50,41:PRINT " TORSO: ";  CURSOR 50,42:PRINT "  FEET: ";   CURSOR 50,43:PRINT "ATTACK: ";  RETURN'--------.LOADØBIN'--------  INPUT "LOAD NAME: ";FNAME$  IF FNAME$ = "" THEN RETURN  BLOAD (FNAME$),P($42000)  RETURN'--------.SAVEØBIN'--------  INPUT "SAVE NAME: ";FNAME$  IF FNAME$ = "" THEN RETURN  GOSUB LOCATEØNEXTØFREEØBYTE  DELETE (FNAME$)  BSAVE (FNAME$),P($42000) TO P(PTR)  RETURN'--------------.SAVEØOPTIMISED'--------------  INPUT "SAVE NAME (OPTIMISED): ";FNAME$  IF FNAME$ = "" THEN RETURN  DELETE (FNAME$)  PTR = $42001  DOPEN #2,(FNAME$ + ",P"),W,U8  PRINT #2, CHR$(1);  PRINT #2, CHR$(2);  ' DUMMY ADDRESS  PRINT #2, CHR$(FRAMEØCOUNT);  FOR FRMIDX = 0 TO FRAMEØCOUNT - 1    X = PEEK(PTR)    PTR = PTR + 1    Y = PEEK(PTR)    PTR = PTR + 1    FRMW = PEEK(PTR)    PTR = PTR + 1    FRMH = PEEK(PTR)    PTR = PTR + 1    PRINT #2, CHR$(X);CHR$(Y);CHR$(FRMW);CHR$(FRMH);    ENDX = X + FRMW - 1    ENDY = Y + FRMH - 1    CLRØPTR = PTR + FRMW * FRMH        FOR YIDX = 0 TO ENDY - Y      FOR XIDX = 0 TO ENDX - X        CVAL = PEEK(CLRØPTR + XIDX + YIDX * FRMW)        IF PEEK(PTR + XIDX + YIDX * FRMW) = 32 THEN BEGIN          CVAL = $FF        BEND        PRINT #2, CHR$(CVAL);      NEXT XIDX    NEXT YIDX    PTR = PTR + FRMW * FRMH * 2  NEXT FRMIDX  DCLOSE #2  RETURN'--------------------.SAVEØFRAMEØTOØMEMORY'--------------------  POKE $40800 + STARTX + STARTY * 80, STARTØCHAR  POKE $FF80000 + STARTX + STARTY * 80, STARTØCOLOR  POKE $40800 + ENDX + ENDY * 80, ENDØCHAR  POKE $FF80000 + ENDX + ENDY * 80, ENDØCOLOR  FRAMEØCOUNT = PEEK($42000)  GOSUB LOCATEØNEXTØFREEØBYTE  PTR = $42000 + BYTESØUSED  POKE PTR, STARTX  PTR = PTR + 1  POKE PTR, STARTY  PTR = PTR + 1  POKE PTR, X - STARTX + 1  PTR = PTR + 1  POKE PTR, Y - STARTY + 1  PTR = PTR + 1  FOR YIDX = STARTY TO Y    FOR XIDX = STARTX TO X     POKE PTR, PEEK($40800 + XIDX + YIDX * 80)     PTR = PTR + 1    NEXT XIDX  NEXT YIDX  FOR YIDX = STARTY TO Y    FOR XIDX = STARTX TO X     POKE PTR, PEEK($FF80000 + XIDX + YIDX * 80)     PTR = PTR + 1    NEXT XIDX  NEXT YIDX  POKE $42000, FRAMEØCOUNT + 1  CURSOR 0,49  PRINT CLRØLINEØRIGHT$;"FRAME COUNT=";PEEK($42000);  PRINT ", NEXT-FREE=$";HEX$(PTR);  CURSOR 0,0  RETURN'----------.LOADØFRAME'----------  PRINT "";CLRØLINEØRIGHT$;  INPUT "FRAME#";CURRØFRAME  GOSUB DRAWØCURRØFRAME  RETURN'------------.DELETEØFRAME'------------  GOSUB GETØENDØPTR  ENDØPTR = PTR  ' DECREMENT FRAME COUNT  FRAMEØCOUNT = FRAMEØCOUNT - 1  POKE $42000, FRAMEØCOUNT  IF CURRØFRAME = FRAMEØCOUNT THEN BEGIN    CURRØFRAME = CURRØFRAME - 1  BEND : ELSE BEGIN    GOSUB SHIFTØREMAININGØFRAMESØALONG  BEND  GOSUB DRAWØCURRØFRAME  RETURN'----------------------------.SHIFTØREMAININGØFRAMESØALONG'----------------------------  GOSUB GETØCURRØFRAMEØPTR  CURRØPTR = PTR  STARTØPTR = CURRØPTR + PEEK(CURRØPTR+2) * PEEK(CURRØPTR+3) * 2 + 4  ' PRINT "CURRØPTR = ";HEX$(CURRØPTR)  ' PRINT "STARTØPTR = ";HEX$(STARTØPTR)  ' PRINT "ENDØPTR = ";HEX$(ENDØPTR)  ' GET KEY A$  ' A$=""  FOR PTR = STARTØPTR TO ENDØPTR    POKE CURRØPTR, PEEK(PTR)    CURRØPTR = CURRØPTR + 1  NEXT PTR    RETURN'-----------.GETØENDØPTR'-----------  FRAMEØCOUNT = PEEK($42000)  PTR = $42001  FRMIDX = 0  IF FRMIDX >= FRAMEØCOUNT THEN BEGIN    CURSOR 0,0    PRINT CLRØLINEØRIGHT$;"INVALID BLOCK#!"    RETURN  BEND  ' TRAVERSE TO FIND BLOCK  FOR FRMIDX = 0 TO FRAMEØCOUNT - 1    ' SKIP X, Y    PTR = PTR + 2    FRMW = PEEK(PTR)    PTR = PTR + 1    FRMH = PEEK(PTR)    PTR = PTR + 1    PTR = PTR + FRMW * FRMH * 2  NEXT FRMIDX  RETURN'------------------.GETØCURRØFRAMEØPTR'------------------  ' TRAVERSE TO FIND BLOCK  PTR = $42001  FOR FRMIDX = 0 TO FRAMEØCOUNT    IF FRMIDX = CURRØFRAME THEN RETURN    ' SKIP X, Y    PTR = PTR + 2    FRMW = PEEK(PTR)    PTR = PTR + 1    FRMH = PEEK(PTR)    PTR = PTR + 1    PTR = PTR + FRMW * FRMH * 2  NEXT FRMIDX  PTR = 0  RETURN'---------------.DRAWØCURRØFRAME'---------------  FRAMEØCOUNT = PEEK($42000)  PTR = $42001  FRMIDX = 0  IF FRMIDX >= FRAMEØCOUNT THEN BEGIN    CURSOR 0,0    PRINT CLRØLINEØRIGHT$;"INVALID BLOCK#!"    RETURN  BEND  GOSUB GETØCURRØFRAMEØPTR  IF PTR = 0 THEN PRINT "NOT FOUND!" : RETURN    X = PEEK(PTR)  PTR = PTR + 1  Y = PEEK(PTR)  PTR = PTR + 1  FRMW = PEEK(PTR)  PTR = PTR + 1  FRMH = PEEK(PTR)  PTR = PTR + 1  ENDX = X + FRMW - 1  ENDY = Y + FRMH - 1  PRINT "";CLRØLINEØRIGHT$;  PRINT "X=";X;", Y=";Y;", W=";FRMW;", H=";FRMH;  PRINT ", PTR=$";HEX$(PTR);  PRINT "";CHR$(27);"J";CLRØLINEØRIGHT$;"FRAME=";CURRØFRAME;  PRINT ", NXT=$";HEX$(PTR + FRMW * FRMH * 2);  CLRØPTR = PTR + FRMW * FRMH  DESTØCHARØPTR =$40800 + X + Y * 80  DESTØCLRØPTR = $FF80000 + X + Y * 80  FOR YIDX = Y TO ENDY    EDMA 0, FRMW, PTR, DESTØCHARØPTR    EDMA 0, FRMW, CLRØPTR, DESTØCLRØPTR    PTR = PTR + FRMW    CLRØPTR = CLRØPTR + FRMW    DESTØCHARØPTR = DESTØCHARØPTR + 80    DESTØCLRØPTR = DESTØCLRØPTR + 80  NEXT YIDX  RETURN'-------------------------.RESTOREØCHARØUNDERØCURSOR'-------------------------  IF STOREØSTATE = ”‘œ“≈Ø”‘¡“‘Ø–œ” THEN BEGIN    POKE $40800 + X + Y * 80, STARTØCHAR    POKE $FF80000 + X + Y * 80, STARTØCOLOR  BEND:ELSE BEGIN  ' ”‘œ“≈Ø≈ŒƒØ–œ”    POKE $40800 + X + Y * 80, ENDØCHAR    POKE $FF80000 + X + Y * 80, ENDØCOLOR        BEND  RETURN'-----------.DRAWØCURSOR'-----------  POKE $40800 + X + Y * 80, 43  POKE $FF80000 + X + Y * 80, 1  RETURN'-----------.DRAWØFOOTER'-----------  CURSOR 0,49  PRINT CLRØLINEØRIGHT$;"FRAME COUNT=";PEEK($42000);", NEXT-FREE=$";  PRINT HEX$(PTR);  RETURN'----------------.STOREØSTATEØINFO'----------------  IF STOREØSTATE = ”‘œ“≈Ø”‘¡“‘Ø–œ” THEN BEGIN    STARTØCHAR = PEEK($40800 + X + Y * 80)    STARTØCOLOR = PEEK($FF80000 + X + Y * 80)    STARTX = X    STARTY = Y  BEND:ELSE BEGIN ' ”‘œ“≈Ø≈ŒƒØ–œ”    ENDØCHAR = PEEK($40800 + X + Y * 80)    ENDØCOLOR = PEEK($FF80000 + X + Y * 80)    ENDX = X    ENDY = Y  BEND  RETURN'---------.INITØVARS'---------  CURRENTØFRAME = 0  STOREØSTATE = ”‘œ“≈Ø”‘¡“‘Ø–œ”  X = 0  Y = 0  CURRØFRAME = 0  RETURN  '---------------------.LOCATEØNEXTØFREEØBYTE'---------------------  FRAMEØCOUNT = PEEK($42000)  PTR = $42001  FRMIDX = 0  DO WHILE 1    IF FRMIDX = FRAMEØCOUNT THEN BEGIN      BYTESØUSED = PTR-$42000      RETURN    BEND    PTR = PTR + 2  ' SKIP X, Y INFO    FRMW = PEEK(PTR) : PTR = PTR + 1    FRMH = PEEK(PTR) : PTR = PTR + 1    PTR = PTR + FRMW * FRMH * 2    FRMIDX = FRMIDX + 1  LOOP  RETURN'---------------------.CHECKØMAGICØSIGNATURE'---------------------  IF PEEK($5FFFE) <> 71 OR PEEK($5FFFF) <> 73 THEN BEGIN    WPOKE $5FFFE, $4947    PRINT "ì";CLRØLINEØRIGHT$;    PRINT "MAGIC SIGNATURE APPLIED. RESET FRAME COUNT TO ZERO? (Y/N)";    GET KEY A$    IF A$ = "Y" THEN POKE $42000,0    PRINT "ì";CLRØLINEØRIGHT$;  BEND  RETURN