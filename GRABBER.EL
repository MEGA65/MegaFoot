.DOCS' гRABBER тOOL - PORTED TO еLEVEN (FOR EASIER MAINTENANCE)' ------------'' уSAGE:' -----' - пRESS 'SPACE' KEY ON TOP-LEFT POINT' - тHEN USE CURSOR KEYS TO MOVE TO BOTTOM-RIGHT POINT & PRESS 'SPACE'' - пRESS '-' AND '+' KEYS TO MOVE BETWEEN PREVIOUS AND NEXT FRAMES' - пRESS 'C' TO REDRAW CURRENT FRAME' - пRESS 'D' TO DELETE THE CURRENT FRAME' - пRESS 'L' THEN A FRAME# TO LOAD THAT FRAME' - пRESS 'X' TO EXIT PROGRAM' - ф1 = LOAD CHAR+COLOR .BIN FILE' - ф3 = SAVE CHAR+COLOR .BIN FILE' - ф5 = SAVE OPTIMIZED+REPAIRED .BIN FILE' - ф7 = EDIT HIT BOXES#OUTPUT "GRABBER"' цHAR+цOLOR фILE фORMAT (ф1/ф3 KEYS)' ----------------------' ворд: PROG-ADDRESS (IGNORED)' ворд: SIZE OF DATA (INCLUDING THIS ворд AND ONWARDS)' быте: # OF FRAMES' ' фраме #0' --------'   быте: X'   быте: Y'   быте: W'   быте: H'   дворд: HEAD BOX (X1,Y1,X2,Y2)'   дворд: TORSO BOX (X1,Y1,X2,Y2)'   дворд: FEET BOX (X1,Y1,X2,Y2)'   дворд: ATTACK BOX (X1,Y1,X2,Y2)'   быте[X*Y]: CHAR DATA'   быте[X*Y]: COLOR DATA'' фраме #1' --------'   (AS BEFORE...)'' фраме #N' --------'   (AS BEFORE...)' цOLOR-ONLY фILE фORMAT (ф5 KEY)' ----------------------' ворд: PROG-ADDRESS (IGNORED)' ворд: SIZE OF DATA (INCLUDING THIS ворд AND ONWARDS)' быте: # OF FRAMES' ' фраме #0' --------'   быте: X'   быте: Y'   быте: W'   быте: H'   дворд: HEAD BOX (X1,Y1,X2,Y2)'   дворд: TORSO BOX (X1,Y1,X2,Y2)'   дворд: FEET BOX (X1,Y1,X2,Y2)'   дворд: ATTACK BOX (X1,Y1,X2,Y2)'   быте[X*Y]: COLOR DATA'' фраме #1' --------'   (AS BEFORE...)'' фраме #N' --------'   (AS BEFORE...)'--------.DECLARES'--------#DECLARE CLR╞LINE╞RIGHT$ = CHR$(27)+"Q"   ' OLD CL$#DECLARE CURRENT╞FRAME  ' OLD FF#DECLARE X, Y  ' CURSOR POSITION#DECLARE PTR  ' POINTER TO DATA BYTES IN MEMORY#DECLARE FRAME╞COUNT#DECLARE FRMIDX#DECLARE BYTES╞USED  ' OLD L#DECLARE FRMW, FRMH#DECLARE START╞CHAR, START╞COLOR, END╞CHAR, END╞COLOR#DECLARE STARTX, STARTY, ENDX, ENDY#DECLARE CURR╞FRAME#DECLARE SRC╞CHAR╞PTR, SRC╞CLR╞PTR#DECLARE A$, XIDX, YIDX#DECLARE DEST╞CHAR╞PTR, DEST╞CLR╞PTR#DECLARE FNAME$#DECLARE CVAL#DECLARE START╞PTR, END╞PTR, CURR╞PTR, SRC╞PTR, DEST╞PTR, SZ, K, LN#DECLARE B(50,3)  ' HITBOXES#DECLARE X1, Y1, X2, Y2#DECLARE HB╞SEL = 0, HB╞MODE, IDX#DEFINE сторе╞старт╞пос = 0#DEFINE сторе╞енд╞пос = 1#DECLARE STORE╞STATE  ' ARE WE STORING START/END POS CHAR/COLOUR DETAILS#DEFINE кеы╞уп = "▒"#DEFINE кеы╞довн = ""#DEFINE кеы╞лефт = "²"#DEFINE кеы╞ригхт = ""#DEFINE кеы╞ф1 = "┘"#DEFINE кеы╞ф3 = "├"#DEFINE кеы╞ф4 = "┼"#DEFINE кеы╞ф5 = "┤"#DEFINE кеы╞ф7 = "┬"#DEFINE кеы╞ф8 = "▄"#DEFINE кеы╞есц = CHR$(27)#DEFINE кеы╞реж╞он = ""#DEFINE кеы╞реж╞офф = "▓"#DEFINE кеы╞ретурн = CHR$(13)#DEFINE оп╞цопы = 0#DEFINE оп╞миь  = 1#DEFINE оп╞свап = 2#DEFINE оп╞филл = 3#DEFINE хб╞моде╞бровсе     = 0#DEFINE хб╞моде╞сел╞цоорд1 = 1#DEFINE хб╞моде╞сел╞цоорд2 = 2#DEFINE хб╞моде╞цомплете   = 3.OFFSETS#DEFINE оффсет╞дата╞сизе  = 0#DEFINE оффсет╞нум╞фрамес = 2#DEFINE оффсет╞фраме0     = 3#DEFINE фрм╞оффсет╞ь          = 0#DEFINE фрм╞оффсет╞ы          = 1#DEFINE фрм╞оффсет╞в          = 2#DEFINE фрм╞оффсет╞х          = 3#DEFINE фрм╞оффсет╞хитбоьес   = 4#DEFINE фрм╞оффсет╞хб╞хеад    = 4#DEFINE фрм╞оффсет╞хб╞торсо   = 8#DEFINE фрм╞оффсет╞хб╞феет    = 12#DEFINE фрм╞оффсет╞хб╞аттацк  = 16#DEFINE фрм╞оффсет╞дата       = 20#DECLARE BX╞OFFS(3)BX╞OFFS(0) = фрм╞оффсет╞хб╞хеадBX╞OFFS(1) = фрм╞оффсет╞хб╞торсоBX╞OFFS(2) = фрм╞оффсет╞хб╞феетBX╞OFFS(3) = фрм╞оффсет╞хб╞аттацк'----.MAIN'----  KEY OFF  POKE $D020, 11, 14  GOSUB INIT╞VARS  GOSUB CHECK╞MAGIC╞SIGNATURE  GOSUB LOCATE╞NEXT╞FREE╞BYTE  GOSUB DRAW╞FOOTER  DO WHILE 1    GOSUB STORE╞STATE╞INFO    GOSUB DRAW╞CURSOR    GOSUB GET╞USER╞INPUT    GOSUB SHOW╞COORDS  LOOP'-----------.SHOW╞COORDS'-----------  CURSOR 0, 49  PRINT CLR╞LINE╞RIGHT$;  IF STORE╞STATE = сторе╞старт╞пос THEN BEGIN    PRINT CHR$(27)+"QX=";X;", Y=";Y;  BEND  IF STORE╞STATE = сторе╞енд╞пос THEN BEGIN    PRINT CHR$(27)+"QX=";STARTX;", Y=";STARTY;    PRINT ", W=";X-STARTX+1;", H=";Y-STARTY+1;  BEND  PRINT CLR╞LINE╞RIGHT$;  RETURN'-----------.ENTER╞COORD'-----------  DO WHILE 1    GOSUB STORE╞STATE╞INFO    GOSUB DRAW╞CURSOR    GET KEY A$    IF A$ <> кеы╞ретурн THEN GOSUB RESTORE╞CHAR╞UNDER╞CURSOR    IF A$ = кеы╞лефт AND X > 0 THEN X = X - 1    IF A$ = кеы╞ригхт AND X < 79 THEN X = X + 1    IF A$ = кеы╞уп AND Y > 0 THEN Y = Y - 1    IF A$ = кеы╞довн AND Y < 49 THEN Y = Y + 1    IF A$=кеы╞ретурн THEN EXIT  LOOP  RETURN'--------------.GET╞USER╞INPUT'--------------  GETKEY A$  IF A$ <> " " THEN GOSUB RESTORE╞CHAR╞UNDER╞CURSOR  IF A$ = кеы╞лефт AND X > 0 THEN X = X - 1  IF A$ = кеы╞ригхт AND X < 79 THEN X = X + 1  IF A$ = кеы╞уп AND Y > 0 THEN Y = Y - 1  IF A$ = кеы╞довн AND Y < 49 THEN Y = Y + 1  IF A$ = "D" THEN GOSUB DELETE╞FRAME  IF A$ = "C" THEN BEGIN    PRINT "⌠";    CURR╞FRAME = 0    GOSUB DRAW╞CURR╞FRAME  BEND  IF A$="-" AND CURR╞FRAME > 0 THEN BEGIN    CURR╞FRAME = CURR╞FRAME - 1    GOSUB DRAW╞CURR╞FRAME  BEND  IF A$="=" AND CURR╞FRAME < PEEK($50002)-1 THEN BEGIN    CURR╞FRAME = CURR╞FRAME + 1    GOSUB DRAW╞CURR╞FRAME  BEND  IF A$=" " THEN BEGIN    STORE╞STATE = STORE╞STATE + 1    IF STORE╞STATE = 2 THEN BEGIN      GOSUB SAVE╞FRAME╞TO╞MEMORY      END    BEND  BEND  IF A$="L" THEN GOSUB LOAD╞FRAME  IF A$="X" THEN BEGIN    CURSOR 0,0    KEY ON    END  BEND  IF A$ = кеы╞ф1 THEN GOSUB LOAD╞BIN  IF A$ = кеы╞ф3 THEN GOSUB SAVE╞BIN  IF A$ = кеы╞ф5 THEN GOSUB SAVE╞OPTIMISED  IF A$ = кеы╞ф7 THEN GOSUB EDIT╞HIT╞BOXES  RETURN'--------------.EDIT╞HIT╞BOXES'--------------  HB╞MODE = хб╞моде╞бровсе  DO WHILE 1    GOSUB SHOW╞HITBOX╞TABLE    GOSUB DRAW╞HITBOXES    GOSUB хб╞GET╞USER╞INPUT    IF A$="X" OR A$=кеы╞есц OR A$="F7" THEN BEGIN      PRINT CHR$(147);      GOSUB DRAW╞CURR╞FRAME      EXIT    BEND  LOOP  RETURN#DEFINE цхар╞боь╞тл = 112#DEFINE цхар╞боь╞тр = 110#DEFINE цхар╞боь╞бл = 109#DEFINE цхар╞боь╞бр = 125#DEFINE цхар╞хорз   = 64#DEFINE цхар╞жерт   = 93#DEFINE цхар╞спаце  = 32'---------.DRAW╞CHAR'---------  IF PEEK($40800 + X + Y * 80) <> цхар╞спаце THEN K = K + 128  POKE $40800 + X + Y * 80, K  RETURN'-------------.DRAW╞HITBOXES'-------------  GOSUB DRAW╞CURR╞FRAME  GOSUB GET╞CURR╞FRAME╞PTR  FOR IDX = 0 TO 3    X1 = PEEK(PTR + BX╞OFFS(IDX))    Y1 = PEEK(PTR + BX╞OFFS(IDX) + 1)    X2 = PEEK(PTR + BX╞OFFS(IDX) + 2)    Y2 = PEEK(PTR + BX╞OFFS(IDX) + 3)    IF NOT (X1=0 AND Y1=0 AND X2=0 AND Y2=0) THEN BEGIN      ' DRAW CORNERS      ' ------------      X = X1 : Y = Y1 : K = цхар╞боь╞тл : GOSUB DRAW╞CHAR      X = X2 : Y = Y1 : K = цхар╞боь╞тр : GOSUB DRAW╞CHAR      X = X1 : Y = Y2 : K = цхар╞боь╞бл : GOSUB DRAW╞CHAR      X = X2 : Y = Y2 : K = цхар╞боь╞бр : GOSUB DRAW╞CHAR      ' DRAW HORIZONTALS      ' ----------------      FOR X = X1+1 TO X2-1        Y = Y1 : K = цхар╞хорз : GOSUB DRAW╞CHAR        Y = Y2 : K = цхар╞хорз : GOSUB DRAW╞CHAR      NEXT X      ' DRAW VERTICALS      ' --------------      FOR Y = Y1+1 TO Y2-1        X = X1 : K = цхар╞жерт : GOSUB DRAW╞CHAR        X = X2 : K = цхар╞жерт : GOSUB DRAW╞CHAR      NEXT Y    BEND  NEXT IDX  RETURN'-----------------.SHOW╞HITBOX╞TABLE'-----------------  GOSUB GET╞CURR╞FRAME╞PTR  CURR╞PTR = PTR  IF HB╞SEL = 0 THEN PRINT кеы╞реж╞он;:ELSE PRINT кеы╞реж╞офф;  CURSOR 40,40:PRINT кеы╞есц;"Q  HEAD: ";  K = фрм╞оффсет╞хб╞хеад:GOSUB SHOW╞HITBOX╞COORDS  IF HB╞SEL = 1 THEN PRINT кеы╞реж╞он;:ELSE PRINT кеы╞реж╞офф;  CURSOR 40,41:PRINT кеы╞есц;"Q TORSO: ";  K = фрм╞оффсет╞хб╞торсо:GOSUB SHOW╞HITBOX╞COORDS  IF HB╞SEL = 2 THEN PRINT кеы╞реж╞он;:ELSE PRINT кеы╞реж╞офф;  CURSOR 40,42:PRINT кеы╞есц;"Q  FEET: ";   K = фрм╞оффсет╞хб╞феет:GOSUB SHOW╞HITBOX╞COORDS  IF HB╞SEL = 3 THEN PRINT кеы╞реж╞он;:ELSE PRINT кеы╞реж╞офф;  CURSOR 40,43:PRINT кеы╞есц;"QATTACK: ";  K = фрм╞оффсет╞хб╞аттацк:GOSUB SHOW╞HITBOX╞COORDS  PRINT кеы╞реж╞офф;  GOSUB GET╞SELECTED╞COORDS  RETURN'--------------------------.GET╞SELECTED╞OFFSET╞INTO╞K'--------------------------  IF HB╞SEL = 0 THEN K = фрм╞оффсет╞хб╞хеад  IF HB╞SEL = 1 THEN K = фрм╞оффсет╞хб╞торсо  IF HB╞SEL = 2 THEN K = фрм╞оффсет╞хб╞феет  IF HB╞SEL = 3 THEN K = фрм╞оффсет╞хб╞аттацк  RETURN'-------------------.GET╞SELECTED╞COORDS'-------------------  GOSUB GET╞SELECTED╞OFFSET╞INTO╞K  GOSUB PEEK╞SELECTED╞COORDS╞INTO╞X1Y1X2Y2  RETURN  '-----------------.хб╞GET╞USER╞INPUT'-----------------  GET KEY A$  IF A$=кеы╞уп AND HB╞SEL > 0 THEN HB╞SEL = HB╞SEL - 1  IF A$=кеы╞довн AND HB╞SEL < 3 THEN HB╞SEL = HB╞SEL + 1  IF A$="-" AND CURR╞FRAME > 0 THEN BEGIN    CURR╞FRAME = CURR╞FRAME - 1    GOSUB DRAW╞CURR╞FRAME  BEND  IF A$="=" AND CURR╞FRAME < PEEK($50002)-1 THEN BEGIN    CURR╞FRAME = CURR╞FRAME + 1    GOSUB DRAW╞CURR╞FRAME  BEND  IF A$=кеы╞ретурн THEN BEGIN    HB╞MODE = HB╞MODE + 1    IF HB╞MODE = хб╞моде╞сел╞цоорд1 THEN BEGIN      GOSUB GET╞SELECTED╞COORDS      X = X1 : Y = Y1      GOSUB ENTER╞COORD      X1 = X      Y1 = Y      HB╞MODE = HB╞MODE + 1    BEND    IF HB╞MODE = хб╞моде╞сел╞цоорд2 THEN BEGIN      GOSUB ENTER╞COORD      X2 = X      Y2 = Y      HB╞MODE = HB╞MODE + 1    BEND    IF HB╞MODE = хб╞моде╞цомплете THEN BEGIN      GOSUB GET╞SELECTED╞OFFSET╞INTO╞K      POKE CURR╞PTR + K    , X1      POKE CURR╞PTR + K + 1, Y1      POKE CURR╞PTR + K + 2, X2      POKE CURR╞PTR + K + 3, Y2      HB╞MODE = хб╞моде╞бровсе    BEND  BEND  RETURN'----------------------------------.PEEK╞SELECTED╞COORDS╞INTO╞X1Y1X2Y2'----------------------------------  X1 = PEEK(CURR╞PTR + K)  Y1 = PEEK(CURR╞PTR + K + 1)  X2 = PEEK(CURR╞PTR + K + 2)  Y2 = PEEK(CURR╞PTR + K + 3)  RETURN'------------------.SHOW╞HITBOX╞COORDS'------------------  GOSUB PEEK╞SELECTED╞COORDS╞INTO╞X1Y1X2Y2  PRINT X1;",";Y1;",";X2;",";Y2;  RETURN'--------.LOAD╞BIN'--------  INPUT "LOAD NAME: ";FNAME$  IF FNAME$ = "" THEN RETURN  BLOAD (FNAME$),P($42000)  GOSUB ONE╞OFF╞REPAIR  RETURN'--------------.ONE╞OFF╞REPAIR'--------------  ' INJECT SPACES WHERE NEEDED  SRC╞PTR = $42000  DEST╞PTR = $50000  FRAME╞COUNT = PEEK(SRC╞PTR)  POKE DEST╞PTR + оффсет╞нум╞фрамес, FRAME╞COUNT  SRC╞PTR = SRC╞PTR + 1  DEST╞PTR = DEST╞PTR + оффсет╞фраме0  SZ = оффсет╞фраме0  FOR K = 0 TO FRAME╞COUNT - 1    POKE DEST╞PTR + фрм╞оффсет╞ь, PEEK(SRC╞PTR)    SRC╞PTR = SRC╞PTR + 1    POKE DEST╞PTR + фрм╞оффсет╞ы, PEEK(SRC╞PTR)    SRC╞PTR = SRC╞PTR + 1    FRMW = PEEK(SRC╞PTR)    POKE DEST╞PTR + фрм╞оффсет╞в, FRMW    SRC╞PTR = SRC╞PTR + 1    FRMH = PEEK(SRC╞PTR)    POKE DEST╞PTR + фрм╞оффсет╞х, FRMH    SRC╞PTR = SRC╞PTR + 1    LN = фрм╞оффсет╞дата - фрм╞оффсет╞хитбоьес    EDMA оп╞филл, LN, 0, DEST╞PTR + фрм╞оффсет╞хитбоьес    LN = FRMW * FRMH * 2    EDMA оп╞цопы, LN, SRC╞PTR, DEST╞PTR + фрм╞оффсет╞дата    SRC╞PTR = SRC╞PTR + LN    DEST╞PTR = DEST╞PTR + фрм╞оффсет╞дата + LN    SZ = SZ + фрм╞оффсет╞дата + LN      NEXT K  DEST╞PTR = $50000  WPOKE DEST╞PTR + оффсет╞дата╞сизе, SZ  RETURN'--------.SAVE╞BIN'--------  INPUT "SAVE NAME: ";FNAME$  IF FNAME$ = "" THEN RETURN  GOSUB LOCATE╞NEXT╞FREE╞BYTE  DELETE (FNAME$)  BSAVE (FNAME$),P($42000) TO P(PTR)  RETURN'--------------.SAVE╞OPTIMISED'--------------  INPUT "SAVE NAME (OPTIMISED): ";FNAME$  IF FNAME$ = "" THEN RETURN  DELETE (FNAME$)  PTR = $42001  DOPEN #2,(FNAME$ + ",P"),W,U8  PRINT #2, CHR$(1);  PRINT #2, CHR$(2);  ' DUMMY ADDRESS  PRINT #2, CHR$(FRAME╞COUNT);  FOR FRMIDX = 0 TO FRAME╞COUNT - 1    X = PEEK(PTR)    PTR = PTR + 1    Y = PEEK(PTR)    PTR = PTR + 1    FRMW = PEEK(PTR)    PTR = PTR + 1    FRMH = PEEK(PTR)    PTR = PTR + 1    PRINT #2, CHR$(X);CHR$(Y);CHR$(FRMW);CHR$(FRMH);    ENDX = X + FRMW - 1    ENDY = Y + FRMH - 1    SRC╞CLR╞PTR = PTR + FRMW * FRMH        FOR YIDX = 0 TO ENDY - Y      FOR XIDX = 0 TO ENDX - X        CVAL = PEEK(SRC╞CLR╞PTR + XIDX + YIDX * FRMW)        IF PEEK(PTR + XIDX + YIDX * FRMW) = 32 THEN BEGIN          CVAL = $FF        BEND        PRINT #2, CHR$(CVAL);      NEXT XIDX    NEXT YIDX    PTR = PTR + FRMW * FRMH * 2  NEXT FRMIDX  DCLOSE #2  RETURN'--------------------.SAVE╞FRAME╞TO╞MEMORY'--------------------  POKE $40800 + STARTX + STARTY * 80, START╞CHAR  POKE $FF80000 + STARTX + STARTY * 80, START╞COLOR  POKE $40800 + ENDX + ENDY * 80, END╞CHAR  POKE $FF80000 + ENDX + ENDY * 80, END╞COLOR  FRAME╞COUNT = PEEK($42000)  GOSUB LOCATE╞NEXT╞FREE╞BYTE  PTR = $42000 + BYTES╞USED  POKE PTR, STARTX  PTR = PTR + 1  POKE PTR, STARTY  PTR = PTR + 1  POKE PTR, X - STARTX + 1  PTR = PTR + 1  POKE PTR, Y - STARTY + 1  PTR = PTR + 1  FOR YIDX = STARTY TO Y    FOR XIDX = STARTX TO X     POKE PTR, PEEK($40800 + XIDX + YIDX * 80)     PTR = PTR + 1    NEXT XIDX  NEXT YIDX  FOR YIDX = STARTY TO Y    FOR XIDX = STARTX TO X     POKE PTR, PEEK($FF80000 + XIDX + YIDX * 80)     PTR = PTR + 1    NEXT XIDX  NEXT YIDX  POKE $42000, FRAME╞COUNT + 1  CURSOR 0,49  PRINT CLR╞LINE╞RIGHT$;"FRAME COUNT=";PEEK($42000);  PRINT ", NEXT-FREE=$";HEX$(PTR);  CURSOR 0,0  RETURN'----------.LOAD╞FRAME'----------  PRINT "";CLR╞LINE╞RIGHT$;  INPUT "FRAME#";CURR╞FRAME  GOSUB DRAW╞CURR╞FRAME  RETURN'------------.DELETE╞FRAME'------------  GOSUB GET╞END╞PTR  END╞PTR = PTR  ' DECREMENT FRAME COUNT  FRAME╞COUNT = FRAME╞COUNT - 1  POKE $42000, FRAME╞COUNT  IF CURR╞FRAME = FRAME╞COUNT THEN BEGIN    CURR╞FRAME = CURR╞FRAME - 1  BEND : ELSE BEGIN    GOSUB SHIFT╞REMAINING╞FRAMES╞ALONG  BEND  GOSUB DRAW╞CURR╞FRAME  RETURN'----------------------------.SHIFT╞REMAINING╞FRAMES╞ALONG'----------------------------  GOSUB GET╞CURR╞FRAME╞PTR  CURR╞PTR = PTR  START╞PTR = CURR╞PTR + PEEK(CURR╞PTR+2) * PEEK(CURR╞PTR+3) * 2 + 4  ' PRINT "CURR╞PTR = ";HEX$(CURR╞PTR)  ' PRINT "START╞PTR = ";HEX$(START╞PTR)  ' PRINT "END╞PTR = ";HEX$(END╞PTR)  ' GET KEY A$  ' A$=""  FOR PTR = START╞PTR TO END╞PTR    POKE CURR╞PTR, PEEK(PTR)    CURR╞PTR = CURR╞PTR + 1  NEXT PTR    RETURN'-----------.GET╞END╞PTR'-----------  FRAME╞COUNT = PEEK($42000)  PTR = $42001  FRMIDX = 0  IF FRMIDX >= FRAME╞COUNT THEN BEGIN    CURSOR 0,0    PRINT CLR╞LINE╞RIGHT$;"INVALID BLOCK#!"    RETURN  BEND  ' TRAVERSE TO FIND BLOCK  FOR FRMIDX = 0 TO FRAME╞COUNT - 1    ' SKIP X, Y    PTR = PTR + 2    FRMW = PEEK(PTR)    PTR = PTR + 1    FRMH = PEEK(PTR)    PTR = PTR + 1    PTR = PTR + FRMW * FRMH * 2  NEXT FRMIDX  RETURN'------------------.GET╞CURR╞FRAME╞PTR'------------------  ' TRAVERSE TO FIND BLOCK  PTR = $50000 + оффсет╞фраме0  FOR FRMIDX = 0 TO FRAME╞COUNT    IF FRMIDX = CURR╞FRAME THEN RETURN    FRMW = PEEK(PTR + фрм╞оффсет╞в)    FRMH = PEEK(PTR + фрм╞оффсет╞х)    PTR = PTR + фрм╞оффсет╞дата + FRMW * FRMH * 2  NEXT FRMIDX  PTR = 0  RETURN'---------------.DRAW╞CURR╞FRAME'---------------  FRAME╞COUNT = PEEK($50000 + оффсет╞нум╞фрамес)  PTR = $50000 + оффсет╞фраме0  FRMIDX = 0  IF FRMIDX >= FRAME╞COUNT THEN BEGIN    CURSOR 0,0    PRINT CLR╞LINE╞RIGHT$;"INVALID BLOCK#!"    RETURN  BEND  GOSUB GET╞CURR╞FRAME╞PTR  IF PTR = 0 THEN PRINT "NOT FOUND!" : RETURN    X = PEEK(PTR + фрм╞оффсет╞ь)  Y = PEEK(PTR + фрм╞оффсет╞ы)  FRMW = PEEK(PTR + фрм╞оффсет╞в)  FRMH = PEEK(PTR + фрм╞оффсет╞х)  ENDX = X + FRMW - 1  ENDY = Y + FRMH - 1  PRINT "";CLR╞LINE╞RIGHT$;  PRINT "X=";X;", Y=";Y;", W=";FRMW;", H=";FRMH;  PRINT ", PTR=$";HEX$(PTR);  PRINT "";CHR$(27);"J";CLR╞LINE╞RIGHT$;"FRAME=";CURR╞FRAME;  PRINT ", NXT=$";HEX$(PTR + фрм╞оффсет╞дата + FRMW * FRMH * 2);  SRC╞CHAR╞PTR = PTR + фрм╞оффсет╞дата  SRC╞CLR╞PTR = PTR + фрм╞оффсет╞дата + FRMW * FRMH  DEST╞CHAR╞PTR =$40800 + X + Y * 80  DEST╞CLR╞PTR = $FF80000 + X + Y * 80  FOR YIDX = Y TO ENDY    EDMA оп╞цопы, FRMW, SRC╞CHAR╞PTR, DEST╞CHAR╞PTR    EDMA оп╞цопы, FRMW, SRC╞CLR╞PTR, DEST╞CLR╞PTR    SRC╞CHAR╞PTR = SRC╞CHAR╞PTR + FRMW    SRC╞CLR╞PTR = SRC╞CLR╞PTR + FRMW    DEST╞CHAR╞PTR = DEST╞CHAR╞PTR + 80    DEST╞CLR╞PTR = DEST╞CLR╞PTR + 80  NEXT YIDX  RETURN'-------------------------.RESTORE╞CHAR╞UNDER╞CURSOR'-------------------------  IF STORE╞STATE = сторе╞старт╞пос THEN BEGIN    POKE $40800 + X + Y * 80, START╞CHAR    POKE $FF80000 + X + Y * 80, START╞COLOR  BEND:ELSE BEGIN  ' сторе╞енд╞пос    POKE $40800 + X + Y * 80, END╞CHAR    POKE $FF80000 + X + Y * 80, END╞COLOR        BEND  RETURN'-----------.DRAW╞CURSOR'-----------  POKE $40800 + X + Y * 80, 43  POKE $FF80000 + X + Y * 80, 1  RETURN'-----------.DRAW╞FOOTER'-----------  CURSOR 0,49  PRINT CLR╞LINE╞RIGHT$;"FRAME COUNT=";PEEK($42000);", NEXT-FREE=$";  PRINT HEX$(PTR);  RETURN'----------------.STORE╞STATE╞INFO'----------------  IF STORE╞STATE = сторе╞старт╞пос THEN BEGIN    START╞CHAR = PEEK($40800 + X + Y * 80)    START╞COLOR = PEEK($FF80000 + X + Y * 80)    STARTX = X    STARTY = Y  BEND:ELSE BEGIN ' сторе╞енд╞пос    END╞CHAR = PEEK($40800 + X + Y * 80)    END╞COLOR = PEEK($FF80000 + X + Y * 80)    ENDX = X    ENDY = Y  BEND  RETURN'---------.INIT╞VARS'---------  CURRENT╞FRAME = 0  STORE╞STATE = сторе╞старт╞пос  X = 0  Y = 0  CURR╞FRAME = 0  RETURN  '---------------------.LOCATE╞NEXT╞FREE╞BYTE'---------------------  FRAME╞COUNT = PEEK($42000)  PTR = $42001  FRMIDX = 0  DO WHILE 1    IF FRMIDX = FRAME╞COUNT THEN BEGIN      BYTES╞USED = PTR-$42000      RETURN    BEND    PTR = PTR + 2  ' SKIP X, Y INFO    FRMW = PEEK(PTR) : PTR = PTR + 1    FRMH = PEEK(PTR) : PTR = PTR + 1    PTR = PTR + FRMW * FRMH * 2    FRMIDX = FRMIDX + 1  LOOP  RETURN'---------------------.CHECK╞MAGIC╞SIGNATURE'---------------------  IF PEEK($5FFFE) <> 71 OR PEEK($5FFFF) <> 73 THEN BEGIN    WPOKE $5FFFE, $4947    PRINT "⌠";CLR╞LINE╞RIGHT$;    PRINT "MAGIC SIGNATURE APPLIED. RESET FRAME COUNT TO ZERO? (Y/N)";    GET KEY A$    IF A$ = "Y" THEN POKE $42000,0    PRINT "⌠";CLR╞LINE╞RIGHT$;  BEND  RETURN