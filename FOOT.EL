' ◊AY OF THE …MPLODING ∆OOT' -------------------------' ¡ COLLABORATIVE TEAM-EFFORT GAME MADE BY THE Õ≈«¡65 COMMUNITY'' «URCE:' - …NITIAL BACKGROUND ART AND ≈LEVEN CODE INFRASTRUCTURE#OUTPUT "FOOT"' ¬¡ŒÀ4 ÕEMORY USAGE' ------------------' 4.0000 ƒÕ¡-Ã…”‘' 4.0100 ”’Œ”≈‘ –¡Ã≈‘‘≈” (EACH PALETTE IS 16*3 IN SIZE, HAVE 12 PALETTES)' 4.0800 ”√“≈≈Œ Õ≈Õœ“Ÿ' 4.2000 –≈‘”√…… «“¡–»…√”' ¬¡ŒÀ5 ÕEMORY USAGE' ------------------' 5.0000 SCREEN BUFFER' 5.1000 COLOR RAM BUFFER' 5.2000 DOUBLED-UP LAYER BUFFER.PETSCII VARS'------------#DECLARE DATAØADDR = $42000#DECLARE MAXØFRAMES#DECLARE FRAMEØADDR(64)#DECLARE FRAMEØDBLUPØADDR(64)#DECLARE FRMØIDX = 0#DECLARE FRMW, FRMH,FRMX,FRMY,FRMX1,FRMY1,FRAMEIDX,CDATAØADDR#DECLARE YY, SCRADDR,CLRADDR#DECLARE A$, LIDX, K, X, Y#DECLARE SRCØADDR, DESTØADDR, LENGTH, TRANSP#DECLARE DESTØMBØSEL, DESTØBANK#DECLARE DBLUPØADDR = $52000#DEFINE …Õ«Ø√Ãœ’ƒ” = 0#DEFINE …Õ«Ø”ÀŸ = 1#DEFINE …Õ«ØÃ‘ØÕœ’Œ‘ = 2#DEFINE …Õ«ØƒÀØÕœ’Œ‘ = 3#DEFINE …Õ«Ø◊¡‘≈“ = 4#DEFINE …Õ«Ø»…Ø«“œ’Œƒ = 5#DEFINE …Õ«ØÃœØ«“œ’Œƒ = 6#DEFINE …Õ«Ø”’Œ = 7#DEFINE »…«»≈”‘ØÃ¡Ÿ≈“ = 7#DECLARE XOFFS(»…«»≈”‘ØÃ¡Ÿ≈“) ' OFFSET INTO CYCLING OF GRAPHIC#DECLARE DRAWØORDER(»…«»≈”‘ØÃ¡Ÿ≈“)DRAWØORDER(0) = …Õ«Ø”ÀŸDRAWØORDER(1) = …Õ«Ø”’ŒDRAWØORDER(2) = …Õ«Ø√Ãœ’ƒ”DRAWØORDER(3) = …Õ«ØÃ‘ØÕœ’Œ‘DRAWØORDER(4) = …Õ«ØƒÀØÕœ’Œ‘DRAWØORDER(5) = …Õ«Ø◊¡‘≈“DRAWØORDER(6) = …Õ«Ø»…Ø«“œ’ŒƒDRAWØORDER(7) = …Õ«ØÃœØ«“œ’Œƒ#DECLARE OFFSØAMOUNT(»…«»≈”‘ØÃ¡Ÿ≈“)OFFSØAMOUNT(0) = .7OFFSØAMOUNT(1) = 0OFFSØAMOUNT(2) = .1OFFSØAMOUNT(3) = .5OFFSØAMOUNT(4) = 1OFFSØAMOUNT(5) = 1.5OFFSØAMOUNT(6) = 2#DECLARE PALIDX, PTR'----.MAIN'----PRINT CHR$(27)+"5"PRINT CHR$(147);BORDER 0BACKGROUND 0GOSUB LOADØDATAPALIDX = 0GOSUB SETØPALETTE.LOOP0  GOSUB INITØVARS  GOSUB SHOWØTITLE  GOSUB GAMEPLAY  ' GOSUB GAMEOVER  GOTO LOOP0'---------------.TRANSPARENTØDMA'---------------  WPOKE $40009, SRCØADDR  WPOKE $4000C, DESTØADDR  WPOKE $40007, LENGTH  POKE  $40004, TRANSP  POKE $D702, 4 ' DMA LIST IN BANK 4  POKE $D701, $00 ' DMA LIST MSB  POKE $D705, $00 ' DMA LIST LSB  RETURN'----------.SHOWØTITLE'----------  PRINT CHR$(147);  PRINT "◊AY OF THE …MPLODING ∆OOT"  PRINT "========================="  PRINT "¡ GAME MADE BY THE Õ≈«¡65 COMMUNITY!"  RETURN'---------.LOADØDATA'---------  ' ∆œ“Õ¡‘:  ' ------  ' - ‘HE SAME AS USED BY ÿANADU GRAB TOOL?  ' - ”AVE OUT A FILE FOR PARALLAX LAYERS  ' - ”AVE OUT A FILE FOR SPRITES^^BLOAD "LAYERS.BIN",P($42000),R  GOSUB INITØPETSCIIØFRAMES  GOSUB REPAIRØPETSCIIØFRAMES  GOSUB PREPAREØDOUBLEØCOPYØLAYER^^BLOAD "PAL.BIN",P($40100),R  RETURN'-----------.SETØPALETTE'----------- (PALIDX)  PTR = $40100 + PALIDX * 16 * 3  FOR K = 0 TO 15    ' RED    POKE $D100 + K + 16, PEEK(PTR)    PTR = PTR + 1    ' GREEN    POKE $D200 + K + 16, PEEK(PTR)    PTR = PTR + 1    ' BLUE    POKE $D300 + K + 16, PEEK(PTR)    PTR = PTR + 1  NEXT K  RETURN'---------.INITØVARS'---------  ' CLEAR DMA LIST AREA  FOR K = 0 TO 20    POKE $40000+K, 0  NEXT K  POKE $40000, $81 ' OPT = DEST ADDR Õ¬ SELECTOR  POKE $40001, $00 ' DEFAULT TO 1ST MEGABYTE  POKE $40002, $07 ' OPT = ENABLE TRANSPARENCY  POKE $40003, $86 ' OPT = SET TRANSPARENCY  POKE $40004, $20 ' TRANSPARENCY VALUE  POKE $40005, $00 ' END OF OPTIONS  POKE $40006, $00 ' √Õƒ LSB = √œ–Ÿ  WPOKE $40007, $0000 ' LENGTH  WPOKE $40009, $1000 ' SOURCE ADDR  POKE $4000B, $05    ' SOURCE BANK  WPOKE $4000C, $1000 ' DEST ADDR  POKE $4000E, $05    ' DEST BANK  POKE $4000F, $00    ' √Õƒ MSB (IGNORE)  WPOKE $40010, $0000 ' MODULO (IGNORE)  ' CLEAR THE OFFSCREEN BUFFER  EDMA 3, $F00, 160, $50000  EDMA 3, $A0, $20, $50F00  EDMA 3, $FA0, $4F, $51000  RETURN'-------------------.INITØPETSCIIØFRAMES'-------------------  MAXØFRAMES = PEEK(DATAØADDR)  DATAØADDR = DATAØADDR + 1  DO WHILE FRMØIDX < MAXØFRAMES    FRAMEØADDR(FRMØIDX) = DATAØADDR    DATAØADDR = DATAØADDR + 2    FRMW = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    FRMH = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    DATAØADDR = DATAØADDR + FRMW * FRMH * 2    ':PRINT CHR$(147);"FRMØIDX=";FRMØIDX    'FRAMEIDX=FRMØIDX    'GOSUB DRAWØPETSCIIØFRAME    'GETKEY TEST2$    FRMØIDX = FRMØIDX + 1  LOOP  RETURN'---------------------.REPAIRØPETSCIIØFRAMES'---------------------  FRMØIDX = 0  DO WHILE FRMØIDX < MAXØFRAMES    DATAØADDR = FRAMEØADDR(FRMØIDX)    FRMX = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    FRMY = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    FRMW = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    FRMH = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    CDATAØADDR = DATAØADDR + FRMW * FRMH    FRMX1=FRMX+FRMW-1    FRMY1=FRMY+FRMH-1    FOR Y = 0 TO FRMY1-FRMY      FOR X = 0 TO FRMX1-FRMX        IF PEEK(DATAØADDR + X + Y * FRMW) = 32 THEN BEGIN          POKE(CDATAØADDR + X + Y * FRMW), $FF        BEND      NEXT X    NEXT Y        FRMØIDX = FRMØIDX + 1  LOOP  RETURN'-------------------------.PREPAREØDOUBLEØCOPYØLAYER'-------------------------  DBLUPØADDR = $52000  FOR FRAMEIDX = 0 TO MAXØFRAMES-1     DATAØADDR = FRAMEØADDR(FRAMEIDX)    FRMX = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    FRMY = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    FRMW = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    FRMH = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    FRMX1=FRMX+FRMW-1    FRMY1=FRMY+FRMH-1    FRAMEØDBLUPØADDR(FRAMEIDX) = DBLUPØADDR    ' √œ–Ÿ √»¡“” FOR EACH ROW TWICE INTO SOME LOCATION IN DBLUPØADDR    FOR Y = FRMY TO FRMY1      FOR K = 0 TO 1          ' COPY IT TO SOME PLACE IN $5.2000          EDMA 0, FRMW, DATAØADDR, DBLUPØADDR          DBLUPØADDR = DBLUPØADDR + FRMW      NEXT K      DATAØADDR = DATAØADDR + FRMW    NEXT Y    ' √œ–Ÿ √œÃœ“ FOR EACH ROW TWICE INTO SOME LOCATION IN DBLUPØADDR    FOR Y = FRMY TO FRMY1      FOR K = 0 TO 1          ' COPY IT TO SOME PLACE IN $5.2000          EDMA 0, FRMW, DATAØADDR, DBLUPØADDR          DBLUPØADDR = DBLUPØADDR + FRMW      NEXT K      DATAØADDR = DATAØADDR + FRMW    NEXT Y  NEXT FRAMEIDX  RETURN'---------------.DRAWØBACKGROUND'---------------  GETKEY A$  IF A$="" THEN GOSUB INCRØOFFS ' XOFFS=XOFFS+1  IF A$="ù" THEN GOSUB DECRØOFFS ' XOFFS=XOFFS-1     IF A$="," AND PALIDX>0 THEN PALIDX=PALIDX-1:GOSUB SETØPALETTE  IF A$="." AND PALIDX<11 THEN PALIDX=PALIDX+1:GOSUB SETØPALETTE   '   FRAMEIDX = …Õ«Ø”’Œ   '   GOSUB DRAWØPETSCIIØFRAME    '   RETURN  FOR LIDX = 0 TO »…«»≈”‘ØÃ¡Ÿ≈“     ' IF LAYERØVISIBLE[LIDX] = 1 THEN BEGIN       FRAMEIDX = DRAWØORDER(LIDX)       GOSUB DRAWØPETSCIIØFRAME      'BEND  NEXT LIDX  RETURN'------------------.DRAWØPETSCIIØFRAME'------------------  DATAØADDR = FRAMEØADDR(FRAMEIDX)  FRMX = PEEK(DATAØADDR)  DATAØADDR = DATAØADDR + 1  FRMY = PEEK(DATAØADDR)  DATAØADDR = DATAØADDR + 1  FRMW = PEEK(DATAØADDR)  DATAØADDR = DATAØADDR + 1  FRMH = PEEK(DATAØADDR)  DATAØADDR = DATAØADDR + 1  FRMX1=FRMX+FRMW-1  FRMY1=FRMY+FRMH-1  SCRADDR = $50000 + FRMX + FRMY * 80  CLRADDR = $51000 + FRMX + FRMY * 80  CDATAØADDR = DATAØADDR + FRMW * FRMH  XOFFS(FRAMEIDX) = MOD(XOFFS(FRAMEIDX) + 80, 80)  XOFFS = INT(XOFFS(FRAMEIDX))  ' XOFFS = MOD(INT(XOFFS(FRAMEIDX))+80, 80)  ' XOFFS(FRAMEIDX) = XOFFS  DATAØADDR = FRAMEØDBLUPØADDR(FRAMEIDX)  CDATAØADDR = DATAØADDR + FRMW * FRMH * 2  FOR YY=FRMY TO FRMY1    ' DRAW CHARS FROM OFFSET TO END    ' -----------------------------    SRCØADDR = DATAØADDR + XOFFS    DESTØADDR = SCRADDR    LENGTH = FRMW    TRANSP = 32    GOSUB TRANSPARENTØDMA    SRCØADDR = CDATAØADDR + XOFFS    DESTØADDR = CLRADDR    TRANSP = $FF    GOSUB TRANSPARENTØDMA    DATAØADDR = DATAØADDR + FRMW * 2    CDATAØADDR = CDATAØADDR + FRMW * 2    SCRADDR = SCRADDR + 80    CLRADDR = CLRADDR + 80    NEXT YY  RETURN'--------.GAMEPLAY'--------  GOSUB DRAWØBACKGROUND  ' GOSUB DRAWØSPRITES  GOSUB PAGEØFLIP  ' GOSUB USERØINPUT  ' GOSUB GAMEØLOGIC  GOTO GAMEPLAY  RETURN'---------.PAGEØFLIP'---------  EDMA 0, $FA0, $50000, $40800  EDMA 0, $FA0, $51000, $FF80000  ' FILL THE TOP PART  EDMA 3, $F00, $4F, $51000  RETURN'---------.INCRØOFFS'---------  FOR K = 0 TO »…«»≈”‘ØÃ¡Ÿ≈“    XOFFS(K) = XOFFS(K) + OFFSØAMOUNT(K)  NEXT K  RETURN'---------.DECRØOFFS'---------  FOR K = 0 TO »…«»≈”‘ØÃ¡Ÿ≈“    XOFFS(K) = XOFFS(K) - OFFSØAMOUNT(K)  NEXT K  RETURN