' ◊AY OF THE …MPLODING ∆OOT' -------------------------' ¡ COLLABORATIVE TEAM-EFFORT GAME MADE BY THE Õ≈«¡65 COMMUNITY'' «URCE:' - …NITIAL BACKGROUND ART AND ≈LEVEN CODE INFRASTRUCTURE#OUTPUT "FOOT"' ¬¡ŒÀ4 ÕEMORY USAGE' ------------------' 4.0000 ƒÕ¡-Ã…”‘' 4.0800 ”√“≈≈Œ Õ≈Õœ“Ÿ' 4.2000 –≈‘”√…… «“¡–»…√”' ¬¡ŒÀ5 ÕEMORY USAGE' ------------------' 5.0000 SCREEN BUFFER' 5.1000 COLOR RAM BUFFER' 5.2000 (FREE).PETSCII VARS'------------#DECLARE DATAØADDR = $42000#DECLARE MAXØFRAMES#DECLARE FRAMEØADDR(64)#DECLARE FRMØIDX = 0#DECLARE FRMW, FRMH,FRMX,FRMY,FRMX1,FRMY1,FRAMEIDX,CDATAØADDR#DECLARE YY, SCRADDR,CLRADDR#DECLARE A$, LIDX, K, X, Y#DECLARE SRCØADDR, DESTØADDR, LENGTH, TRANSP#DECLARE DESTØMBØSEL, DESTØBANK#DECLARE XOFFS(6) ' OFFSET INTO CYCLING OF GRAPHIC#DEFINE …Õ«Ø√Ãœ’ƒ” = 0#DEFINE …Õ«Ø”ÀŸ = 1#DEFINE …Õ«ØÃ‘ØÕœ’Œ‘ = 2#DEFINE …Õ«ØƒÀØÕœ’Œ‘ = 3#DEFINE …Õ«Ø»…Ø«“œ’Œƒ = 5#DEFINE …Õ«ØÃœØ«“œ’Œƒ = 6#DEFINE Õ¡ÿØÃ¡Ÿ≈“ = 6#DECLARE DRAWØORDER(6)DRAWØORDER(0) = 1DRAWØORDER(1) = 0DRAWØORDER(2) = 2DRAWØORDER(3) = 3DRAWØORDER(4) = 4DRAWØORDER(5) = 5DRAWØORDER(6) = 6#DECLARE OFFSØAMOUNT(6)OFFSØAMOUNT(0) = .7OFFSØAMOUNT(1) = 0OFFSØAMOUNT(2) = .1OFFSØAMOUNT(3) = .5OFFSØAMOUNT(4) = 1OFFSØAMOUNT(5) = 1.5OFFSØAMOUNT(6) = 2GOSUB LOADØDATA.LOOP0  GOSUB INITØVARS  ' GOSUB SHOWØTITLE  GOSUB GAMEPLAY  ' GOSUB GAMEOVER  GOTO LOOP0'---------------.TRANSPARENTØDMA'---------------  POKE $40001, DESTØMBØSEL  WPOKE $40009, SRCØADDR  WPOKE $4000C, DESTØADDR  POKE $4000E, DESTØBANK  WPOKE $40007, LENGTH  POKE  $40004, TRANSP  POKE $D702, 4 ' DMA LIST IN BANK 4  POKE $D701, $00 ' DMA LIST MSB  POKE $D705, $00 ' DMA LIST LSB  RETURN'---------.LOADØDATA'---------  ' ∆œ“Õ¡‘:  ' ------  ' - ‘HE SAME AS USED BY ÿANADU GRAB TOOL?  ' - ”AVE OUT A FILE FOR PARALLAX LAYERS  ' - ”AVE OUT A FILE FOR SPRITES^^BLOAD "LAYERS.BIN",P($42000),R  GOSUB INITØPETSCIIØFRAMES  GOSUB REPAIRØPETSCIIØFRAMES  RETURN'---------.INITØVARS'---------  ' CLEAR DMA LIST AREA  FOR K = 0 TO 20    POKE $40000+K, 0  NEXT K  POKE $40000, $81 ' OPT = DEST ADDR Õ¬ SELECTOR  POKE $40001, $00 ' DEFAULT TO 1ST MEGABYTE  POKE $40002, $07 ' OPT = ENABLE TRANSPARENCY  POKE $40003, $86 ' OPT = SET TRANSPARENCY  POKE $40004, $20 ' TRANSPARENCY VALUE  POKE $40005, $00 ' END OF OPTIONS  POKE $40006, $00 ' √Õƒ LSB = √œ–Ÿ  WPOKE $40007, $0000 ' LENGTH  WPOKE $40009, $1000 ' SOURCE ADDR  POKE $4000B, $04    ' SOURCE BANK  WPOKE $4000C, $1000 ' DEST ADDR  POKE $4000E, $04    ' DEST BANK  POKE $4000F, $00    ' √Õƒ MSB (IGNORE)  WPOKE $40010, $0000 ' MODULO (IGNORE)  ' CLEAR THE OFFSCREEN BUFFER  EDMA 3, $FA0, $20, $50000  EDMA 3, $FA0, $4F, $51000  RETURN'-------------------.INITØPETSCIIØFRAMES'-------------------  MAXØFRAMES = PEEK(DATAØADDR)  DATAØADDR = DATAØADDR + 1  DO WHILE FRMØIDX < MAXØFRAMES    FRAMEØADDR(FRMØIDX) = DATAØADDR    DATAØADDR = DATAØADDR + 2    FRMW = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    FRMH = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    DATAØADDR = DATAØADDR + FRMW * FRMH * 2    ':PRINT CHR$(147);"FRMØIDX=";FRMØIDX    'FRAMEIDX=FRMØIDX    'GOSUB DRAWØPETSCIIØFRAME    'GETKEY TEST2$    FRMØIDX = FRMØIDX + 1  LOOP  RETURN'---------------------.REPAIRØPETSCIIØFRAMES'---------------------  FRMØIDX = 0  DO WHILE FRMØIDX < MAXØFRAMES    DATAØADDR = FRAMEØADDR(FRMØIDX)    FRMX = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    FRMY = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    FRMW = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    FRMH = PEEK(DATAØADDR)    DATAØADDR = DATAØADDR + 1    CDATAØADDR = DATAØADDR + FRMW * FRMH    FRMX1=FRMX+FRMW-1    FRMY1=FRMY+FRMH-1    FOR Y = 0 TO FRMY1-FRMY      FOR X = FRMX TO FRMX1        IF PEEK(DATAØADDR + X + Y * 80) = 32 THEN BEGIN          POKE(CDATAØADDR + X + Y * 80), $FF        BEND      NEXT X    NEXT Y        FRMØIDX = FRMØIDX + 1  LOOP  RETURN'------------------.DRAWØPETSCIIØFRAME'------------------  DATAØADDR = FRAMEØADDR(FRAMEIDX)  FRMX = PEEK(DATAØADDR)  DATAØADDR = DATAØADDR + 1  FRMY = PEEK(DATAØADDR)  DATAØADDR = DATAØADDR + 1  FRMW = PEEK(DATAØADDR)  DATAØADDR = DATAØADDR + 1  FRMH = PEEK(DATAØADDR)  DATAØADDR = DATAØADDR + 1  FRMX1=FRMX+FRMW-1  FRMY1=FRMY+FRMH-1  SCRADDR = $50000 + FRMX + FRMY * 80  CLRADDR = $51000 + FRMX + FRMY * 80  CDATAØADDR = DATAØADDR + FRMW * FRMH  XOFFS = XOFFS(FRAMEIDX)  FOR YY=FRMY TO FRMY1    ' FROM OFFSET TO END    ' ------------------    IF INT(FRMW-XOFFS) > 0 THEN BEGIN      ' EDMA 0, FRMW-XOFFS, DATAØADDR, SCRADDR+XOFFS      SRCØADDR = DATAØADDR      DESTØADDR = SCRADDR+XOFFS      DESTØBANK = $05      DESTØMBØSEL = $00      LENGTH = FRMW-XOFFS      TRANSP = 32      GOSUB TRANSPARENTØDMA      ' EDMA 0, FRMW-XOFFS, CDATAØADDR, CLRADDR+XOFFS      SRCØADDR = CDATAØADDR      DESTØADDR = CLRADDR+XOFFS      DESTØBANK = $05      DESTØMBØSEL = $00      LENGTH = FRMW-XOFFS      TRANSP = $FF      GOSUB TRANSPARENTØDMA    BEND    ' FROM START TO OFFSET-1    ' ----------------------    IF INT(XOFFS) > 0 THEN BEGIN      ' EDMA 0, XOFFS, DATAØADDR+(FRMW-XOFFS), SCRADDR      SRCØADDR = DATAØADDR+(FRMW-XOFFS)      DESTØADDR = SCRADDR      DESTØBANK = $05      DESTØMBØSEL = $00      LENGTH = XOFFS      TRANSP = 32      GOSUB TRANSPARENTØDMA      ' EDMA 0, XOFFS, CDATAØADDR+(FRMW-XOFFS), CLRADDR      SRCØADDR = CDATAØADDR+(FRMW-XOFFS)      DESTØADDR = CLRADDR      DESTØBANK = $05      DESTØMBØSEL = $00      LENGTH = XOFFS      TRANSP = $FF      GOSUB TRANSPARENTØDMA    BEND    DATAØADDR = DATAØADDR + FRMW    CDATAØADDR = CDATAØADDR + FRMW    SCRADDR = SCRADDR + 80    CLRADDR = CLRADDR + 80    NEXT YY  RETURN'--------.GAMEPLAY'--------  GOSUB DRAWØBACKGROUND  ' GOSUB DRAWØSPRITES  GOSUB PAGEØFLIP  ' GOSUB USERØINPUT  ' GOSUB GAMEØLOGIC  GOTO GAMEPLAY  RETURN'---------.PAGEØFLIP'---------  EDMA 0, $FA0, $50000, $40800  EDMA 0, $FA0, $51000, $FF80000  ' FILL THE TOP PART  EDMA 3, $FA0, $4F, $51000  RETURN'---------.INCRØOFFS'---------  FOR K = 0 TO Õ¡ÿØÃ¡Ÿ≈“    XOFFS(K) = XOFFS(K) + OFFSØAMOUNT(K)  NEXT K  RETURN'---------.DECRØOFFS'---------  FOR K = 0 TO Õ¡ÿØÃ¡Ÿ≈“    XOFFS(K) = XOFFS(K) - OFFSØAMOUNT(K)  NEXT K  RETURN'---------------.DRAWØBACKGROUND'---------------  GETKEY A$  IF A$="" THEN GOSUB INCRØOFFS ' XOFFS=XOFFS+1  IF A$="ù" THEN GOSUB DECRØOFFS ' XOFFS=XOFFS-1   '       FRAMEIDX = DRAWØORDER(1)'       GOSUB DRAWØPETSCIIØFRAME '       RETURN  FOR LIDX = 0 TO Õ¡ÿØÃ¡Ÿ≈“     ' IF LAYERØVISIBLE[LIDX] = 1 THEN BEGIN       FRAMEIDX = DRAWØORDER(LIDX)       GOSUB DRAWØPETSCIIØFRAME      'BEND  NEXT LIDX  RETURN